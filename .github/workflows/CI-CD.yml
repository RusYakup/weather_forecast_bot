name: CI/CD Pipeline

on: [push]

env:
  VERSION: 0.0.${{ github.run_number }}

jobs:
  unit_tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          pip install pipenv
          pipenv install --dev

      - name: Run unit tests
        run: |
          pipenv run pytest postgres/tests
          
  build:
    runs-on: ubuntu-latest
    needs: unit_tests
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Build
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker image
        run: |
          docker build \
            --push \
            -t ${{ secrets.DOCKER_USERNAME }}/weather_bot:${{ env.VERSION }} .          

  release:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Build
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker image
        run: |
          docker pull ${{ secrets.DOCKER_USERNAME }}/weather_bot:${{ env.VERSION }}
          docker tag ${{ secrets.DOCKER_USERNAME }}/weather_bot:${{ env.VERSION }} ${{ secrets.DOCKER_USERNAME }}/weather_bot:latest          
          docker push ${{ secrets.DOCKER_USERNAME }}/weather_bot:latest
